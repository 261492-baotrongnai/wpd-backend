import { messagingApi } from '@line/bot-sdk';
import { ImageQuickReply, CancleQuickReply } from './quick-reply';
import { Logger } from '@nestjs/common';
import { ConfigService } from '@nestjs/config';

// FlexMessage type ‡∏°‡∏±‡∏ô‡πÇ‡∏î‡∏ô deprecated ‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å type ‡∏ú‡πà‡∏≤‡∏ô messagingApi ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô (‡πÅ‡∏ï‡πà doc ‡πÑ‡∏°‡πà‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÑ‡∏ß‡πâ ‡∏à‡∏∞‡∏ö‡πâ‡∏≤)
export const ClassifyFlex: messagingApi.FlexMessage = {
  type: 'flex',
  altText: '‡πÇ‡∏õ‡∏£‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì',
  contents: {
    type: 'bubble',
    hero: {
      type: 'image',
      url: 'https://i.postimg.cc/3xh95LDs/image.png',
      size: 'full',
      aspectRatio: '20:13',
      aspectMode: 'cover',
    },
    footer: {
      type: 'box',
      layout: 'vertical',
      spacing: 'sm',
      contents: [
        {
          type: 'box',
          layout: 'vertical',
          contents: [
            {
              type: 'button',
              action: {
                type: 'uri',
                label: '‡∏Å‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ',
                uri: 'https://liff.line.me/2007211748-NYb7nX3z',
              },
              color: '#434343',
              height: 'md',
              margin: 'none',
            },
          ],
          backgroundColor: '#D1E5FF',
          borderWidth: 'none',
          cornerRadius: 'lg',
          margin: 'none',
          spacing: 'none',
          justifyContent: 'center',
          alignItems: 'center',
          paddingAll: 'none',
        },
      ],
      flex: 0,
    },
  },
};

export const GreetingFlex: messagingApi.FlexMessage = {
  type: 'flex',
  altText: '‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà LINE ‡∏´‡∏ß‡∏≤‡∏ô‡∏û‡∏≠‡∏î‡∏µ',
  contents: {
    type: 'bubble',
    size: 'mega',
    hero: {
      type: 'image',
      url: 'https://i.postimg.cc/Kjkshsph/welcome.png',
      size: 'full',
      aspectRatio: '2:1',
      aspectMode: 'cover',
      margin: 'none',
    },
    body: {
      type: 'box',
      layout: 'vertical',
      contents: [
        {
          type: 'box',
          layout: 'vertical',
          contents: [
            {
              type: 'text',
              text: '‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡πà‡∏∞ ‡∏°‡∏∞‡∏•‡∏¥‡πÄ‡∏≠‡∏á‡∏Ñ‡πà‡∏∞üòä',
              wrap: true,
              contents: [],
              size: 'md',
              offsetBottom: 'none',
              offsetTop: 'xs',
            },
            {
              type: 'text',
              text: '‡∏°‡∏∞‡∏•‡∏¥‡∏à‡∏∞‡∏Ñ‡∏≠‡∏¢‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢‡∏î‡∏π‡πÅ‡∏•‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏≠‡∏á‡∏ô‡∏∞‡∏Ñ‡∏∞',
              wrap: true,
              offsetTop: 'none',
              margin: 'md',
              size: 'md',
              color: '#555555',
            },
          ],
        },
        {
          type: 'text',
          margin: 'xxl',
          wrap: true,
          color: '#434343',
          contents: [],
          size: 'md',
          text: '‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡∏Å‡πà‡∏≠‡∏ô‡∏ô‡∏∞‡∏Ñ‡∏∞‚¨áÔ∏è',
          offsetBottom: 'xs',
        },
      ],
      margin: 'sm',
      paddingAll: 'xxl',
    },
    styles: {
      footer: {
        separator: true,
      },
    },
  },
};

export const AskForImageFlex: messagingApi.FlexMessage = {
  type: 'flex',
  altText: '‡∏ñ‡πà‡∏≤‡∏¢‡∏£‡∏π‡∏õ‡∏≠‡∏≤‡∏´‡∏≤‡∏£ ‡∏´‡∏£‡∏∑‡∏≠ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏π‡∏õ‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏à‡∏≤‡∏Å‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠‡∏™‡πà‡∏á‡∏°‡∏≤‡πÉ‡∏´‡πâ‡∏°‡∏∞‡∏•‡∏¥‡∏´‡∏ô‡πà‡∏≠‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏∞~',
  contents: {
    type: 'bubble',
    size: 'giga',
    body: {
      type: 'box',
      layout: 'vertical',
      contents: [
        {
          type: 'text',
          text: '‡∏ñ‡πà‡∏≤‡∏¢‡∏£‡∏π‡∏õ‡∏≠‡∏≤‡∏´‡∏≤‡∏£üì∏ ‡∏´‡∏£‡∏∑‡∏≠ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏π‡∏õ‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏à‡∏≤‡∏Å‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠üì± ‡∏™‡πà‡∏á‡∏°‡∏≤‡πÉ‡∏´‡πâ‡∏°‡∏∞‡∏•‡∏¥‡∏´‡∏ô‡πà‡∏≠‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏∞~',
          wrap: true,
          margin: 'none',
        },
      ],
      paddingBottom: 'xl',
      paddingTop: 'xl',
    },
    footer: {
      type: 'box',
      layout: 'vertical',
      contents: [
        {
          type: 'image',
          url: 'https://i.postimg.cc/vTGTd9kd/how-to-take-pic-or-send-pic.png',
          size: 'full',
          aspectRatio: '2:1',
          aspectMode: 'cover',
          offsetTop: 'none',
        },
      ],
      offsetTop: 'none',
      paddingAll: 'none',
    },
  },
  quickReply: ImageQuickReply,
};

export const WhatMealFlex: messagingApi.FlexMessage = {
  type: 'flex',
  altText: '‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡∏Ñ‡∏∑‡∏≠‡∏°‡∏∑‡πâ‡∏≠‡∏≠‡∏∞‡πÑ‡∏£‡∏Ñ‡∏∞?',
  contents: {
    type: 'bubble',
    size: 'kilo',
    body: {
      type: 'box',
      layout: 'vertical',
      contents: [
        {
          type: 'text',
          text: '‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏°‡∏∑‡πâ‡∏≠‡πÑ‡∏´‡∏ô‡∏Ñ‡∏∞',
          align: 'center',
          offsetBottom: 'none',
          offsetTop: 'xs',
          weight: 'bold',
          size: 'lg',
        },
        {
          type: 'separator',
          margin: 'lg',
        },
        {
          type: 'box',
          layout: 'vertical',
          contents: [
            {
              type: 'button',
              action: {
                type: 'message',
                label: '‡∏°‡∏∑‡πâ‡∏≠‡πÄ‡∏ä‡πâ‡∏≤üç≥',
                text: '‡∏°‡∏∑‡πâ‡∏≠‡πÄ‡∏ä‡πâ‡∏≤üç≥',
              },
              color: '#333333',
            },
          ],
          backgroundColor: '#FFF8CC',
          margin: 'lg',
          cornerRadius: 'md',
        },
        {
          type: 'box',
          layout: 'vertical',
          contents: [
            {
              type: 'button',
              action: {
                type: 'message',
                label: '‡∏°‡∏∑‡πâ‡∏≠‡∏Å‡∏•‡∏≤‡∏á‡∏ß‡∏±‡∏ôüçõ',
                text: '‡∏°‡∏∑‡πâ‡∏≠‡∏Å‡∏•‡∏≤‡∏á‡∏ß‡∏±‡∏ôüçõ',
              },
              color: '#333333',
            },
          ],
          margin: 'lg',
          backgroundColor: '#D5F5D0',
          cornerRadius: 'md',
        },
        {
          type: 'box',
          layout: 'vertical',
          contents: [
            {
              type: 'button',
              action: {
                type: 'message',
                label: '‡∏°‡∏∑‡πâ‡∏≠‡πÄ‡∏¢‡πá‡∏ôüçö',
                text: '‡∏°‡∏∑‡πâ‡∏≠‡πÄ‡∏¢‡πá‡∏ôüçö',
              },
              color: '#333333',
            },
          ],
          backgroundColor: '#D7EDFB',
          margin: 'lg',
          cornerRadius: 'md',
        },
        {
          type: 'box',
          layout: 'vertical',
          contents: [
            {
              type: 'button',
              action: {
                type: 'message',
                label: '‡∏Ç‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏áüßã',
                text: '‡∏Ç‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏áüßã',
              },
              color: '#333333',
            },
          ],
          margin: 'lg',
          cornerRadius: 'md',
          backgroundColor: '#EADCF3',
        },
      ],
    },
  },
  quickReply: CancleQuickReply,
};

export const TrueFalseMenuConfirmFlex = (
  menu_name: string,
): Promise<messagingApi.FlexMessage> => {
  return Promise.resolve({
    type: 'flex',
    altText: '‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏°‡∏ô‡∏π‡∏≠‡∏≤‡∏´‡∏≤‡∏£',
    contents: {
      type: 'bubble',
      size: 'mega',
      body: {
        type: 'box',
        layout: 'vertical',
        contents: [
          {
            type: 'text',
            text: '‡∏°‡∏∞‡∏•‡∏¥‡∏Ç‡∏≠‡πÄ‡∏î‡∏≤‡∏ß‡πà‡∏≤‡πÄ‡∏°‡∏ô‡∏π‡∏ó‡∏µ‡πà‡∏ó‡∏≤‡∏ô‡∏Ñ‡∏∑‡∏≠',
            wrap: true,
            weight: 'bold',
            size: 'md',
            align: 'center',
            contents: [],
          },
          {
            type: 'text',
            text: `"${menu_name}" ‡πÉ‡∏ä‡πà‡∏°‡∏±‡πâ‡∏¢‡∏Ñ‡∏∞?`,
            margin: 'sm',
            size: 'md',
            align: 'center',
            weight: 'bold',
          },
        ],
        paddingTop: 'xl',
      },
      footer: {
        type: 'box',
        layout: 'horizontal',
        spacing: 'md',
        contents: [
          {
            type: 'box',
            layout: 'vertical',
            contents: [
              {
                type: 'button',
                action: {
                  type: 'message',
                  label: '‡πÉ‡∏ä‡πà ‚úÖ',
                  text: '‡πÉ‡∏ä‡πà‡πÅ‡∏•‡πâ‡∏ßüëçüèª',
                },
                color: '#333333',
              },
            ],
            backgroundColor: '#D2ECC0',
            cornerRadius: 'md',
            paddingStart: 'none',
          },
          {
            type: 'box',
            layout: 'vertical',
            contents: [
              {
                type: 'button',
                action: {
                  type: 'message',
                  label: '‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà ‚ùå',
                  text: '‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏ô‡∏∞üëéüèª',
                },
                color: '#333333',
              },
            ],
            backgroundColor: '#FFD3D3',
            cornerRadius: 'md',
          },
        ],
        paddingBottom: 'xl',
        paddingTop: 'sm',
        paddingStart: 'lg',
        paddingEnd: 'lg',
      },
    },
    quickReply: CancleQuickReply,
  });
};

export const MenuChoiceConfirmFlex = (
  candidates: { name: string }[],
  id: number,
): messagingApi.FlexMessage => {
  const config = new ConfigService();
  const liff_menu_input = `${config.get<string>('MENU_INPUT')}?id=${id}`;
  Logger.debug(liff_menu_input, 'LIFF URL');
  try {
    return {
      type: 'flex',
      altText: '‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏°‡∏ô‡∏π‡∏≠‡∏≤‡∏´‡∏≤‡∏£',
      contents: {
        type: 'bubble',
        size: 'giga',
        body: {
          type: 'box',
          layout: 'vertical',
          contents: [
            {
              type: 'text',
              text: '‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏°‡∏ô‡∏π‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ó‡∏µ‡πà',
              align: 'center',
              offsetBottom: 'none',
              offsetTop: 'xs',
              weight: 'bold',
              size: 'lg',
            },
            {
              type: 'text',
              text: '‡∏°‡∏∞‡∏•‡∏¥‡∏Ñ‡∏¥‡∏î‡∏ß‡πà‡∏≤‡πÉ‡∏Å‡∏•‡πâ‡πÄ‡∏Ñ‡∏µ‡∏¢‡∏á‡∏Å‡∏±‡∏ö',
              weight: 'bold',
              align: 'center',
              size: 'lg',
            },
            {
              type: 'text',
              text: '‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡∏î‡∏π‡∏ô‡∏∞‡∏Ñ‡∏∞',
              weight: 'bold',
              align: 'center',
              size: 'lg',
            },
            {
              type: 'separator',
              margin: 'xl',
            },
            {
              type: 'box',
              layout: 'vertical',
              backgroundColor: '#FFF8CC',
              margin: 'lg',
              cornerRadius: 'md',
              paddingAll: 'lg',
              action: {
                type: 'message',
                label: candidates[0].name,
                text: candidates[0].name,
              },
              contents: [
                {
                  type: 'text',
                  text: candidates[0].name,
                  wrap: true,
                  size: 'lg',
                  align: 'center',
                  color: '#333333',
                  weight: 'regular',
                },
              ],
              offsetTop: 'none',
            },
            {
              type: 'box',
              layout: 'vertical',
              backgroundColor: '#D5F5D0',
              margin: 'lg',
              cornerRadius: 'md',
              paddingAll: 'lg',
              action: {
                type: 'message',
                label: candidates[1].name,
                text: candidates[1].name,
              },
              contents: [
                {
                  type: 'text',
                  text: candidates[1].name,
                  wrap: true,
                  size: 'lg',
                  align: 'center',
                  color: '#333333',
                  weight: 'regular',
                },
              ],
            },
            {
              type: 'box',
              layout: 'vertical',
              backgroundColor: '#D7EDFB',
              margin: 'lg',
              cornerRadius: 'md',
              paddingAll: 'lg',
              action: {
                type: 'message',
                label: candidates[2].name,
                text: candidates[2].name,
              },
              contents: [
                {
                  type: 'text',
                  text: candidates[2].name,
                  wrap: true,
                  size: 'lg',
                  align: 'center',
                  color: '#333333',
                  weight: 'regular',
                },
              ],
            },
            {
              type: 'box',
              layout: 'vertical',
              backgroundColor: '#EADCF3',
              margin: 'lg',
              cornerRadius: 'md',
              paddingAll: 'lg',
              action: {
                type: 'message',
                label: candidates[3].name,
                text: candidates[3].name,
              },
              contents: [
                {
                  type: 'text',
                  text: candidates[3].name,
                  wrap: true,
                  size: 'lg',
                  align: 'center',
                  color: '#333333',
                  weight: 'regular',
                },
              ],
            },
            {
              type: 'box',
              layout: 'vertical',
              backgroundColor: '#FFDBE8',
              cornerRadius: 'md',
              margin: 'lg',
              paddingAll: 'lg',
              action: {
                type: 'uri',
                label: '‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏°‡∏ô‡∏π‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÄ‡∏≠‡∏á',
                uri: liff_menu_input,
              },
              contents: [
                {
                  type: 'text',
                  text: '‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏°‡∏ô‡∏π‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á',
                  wrap: true,
                  size: 'lg',
                  align: 'center',
                  color: '#333333',
                  weight: 'regular',
                },
                {
                  type: 'text',
                  text: '‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÄ‡∏≠‡∏á',
                  wrap: true,
                  size: 'lg',
                  align: 'center',
                  color: '#333333',
                  margin: 'sm',
                  weight: 'regular',
                },
              ],
            },
          ],
        },
      },
      quickReply: CancleQuickReply,
    };
  } catch (error) {
    console.error('Error creating MenuChoiceConfirmFlex:', error);
    throw error;
  }
};
